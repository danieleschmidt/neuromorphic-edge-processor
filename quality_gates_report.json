{
  "overall_status": "FAILED",
  "overall_score": 0.8376923076923077,
  "execution_time_ms": 53301.212549209595,
  "timestamp": "2025-08-22T00:28:02.372076",
  "generation": "Generation 3 (Optimized)",
  "gates": [
    {
      "name": "Functional Tests",
      "status": "FAILED",
      "score": 0.4,
      "details": {
        "generation_1": {
          "status": "PASSED",
          "output": "r...\n   ‚úÖ Encoded spike trains shape: torch.Size([2, 3, 100])\n   ‚úÖ Total spikes generated: 11.0\n   ‚úÖ Mean firing rate: 18.33 Hz\n   ‚úÖ Sparsity: 0.982\n\nüß™ Testing Data Loader...\n   ‚úÖ Created dataset with 30 samples\n   ‚úÖ Dataset classes: 3\n   ‚úÖ Sparsity: 0.97133203125\n   ‚úÖ Sample shape: torch.Size([128, 1000]), Target: 0\n\n================================================================================\n‚úÖ 5/5 tests passed\nüéâ All basic functionality tests passed! Generation 1 implementation successful.\n",
          "errors": ""
        },
        "generation_2": {
          "status": "FAILED",
          "output": "orrectly rejected invalid parameters\nINFO: Initialized robust LIF neuron with 5 neurons\n   ‚úÖ Valid parameters accepted\n   ‚úÖ Handled zero input\n   ‚úÖ Handled NaN input with recovery\n\n‚ö° Testing Circuit Breaker...\n   ‚úÖ Circuit breaker triggered after 3 failures\n   ‚úÖ Circuit breaker correctly blocking calls\n\n==========================================================================================\n‚úÖ 6/7 robust functionality tests passed\n‚ö†Ô∏è  Some tests failed. Generation 2 implementation needs fixes.\n",
          "errors": "e_train: '>' not supported between instances of 'RobustLIFNeuron' and 'int'\nError in get_spike_train: unknown - '>' not supported between instances of 'RobustLIFNeuron' and 'int'\nInput shapes: {}\nAll retry attempts exhausted for get_spike_train\n/root/repo/src/security/input_sanitizer.py:347: UserWarning: Input sanitization warning in forward: Replaced NaN values in arg_1 with 0.0\n  warnings.warn(f\"Input sanitization warning in {func.__name__}: {warning}\")\nCircuit breaker opened after 2 failures\n"
        },
        "generation_3": {
          "status": "FAILED",
          "output": "IF neuron with 10 neurons\nINFO: JIT compilation completed in 0.001s\nINFO: Initialized optimized LIF neuron with 10 neurons\n‚úì Test 8: Performance target monitoring - PASSED\n\n============================================================\nGENERATION 3 CORE TESTS: 5/8 PASSED (62.5%)\n‚ö†Ô∏è  Only 62.5% tests passed - need ‚â•80% for validation\n============================================================\nGENERATION 3 VALIDATION: ‚ùå NEEDS IMPROVEMENT\n============================================================\n",
          "errors": ""
        },
        "core_functionality": {
          "status": "fail",
          "score": 0,
          "message": "Core functionality tests failed",
          "details": {
            "core_imports": "failed: No module named 'numpy'",
            "neuron_functionality": "failed: cannot access local variable 'PurePythonLIFNeuron' where it is not associated with a value",
            "network_functionality": "failed: cannot access local variable 'PurePythonSpikingNetwork' where it is not associated with a value",
            "lsm_functionality": "failed: cannot access local variable 'PurePythonLiquidStateMachine' where it is not associated with a value"
          },
          "requirements": [
            "Core models must be importable",
            "Basic operations must work"
          ],
          "recommendations": [
            "Fix core model imports",
            "Fix neuron implementation",
            "Fix network implementation",
            "Fix LSM implementation"
          ]
        },
        "model_factory": {
          "status": "error",
          "score": 0,
          "message": "Model factory testing failed: No module named 'numpy'",
          "error": "No module named 'numpy'",
          "requirements": [
            "Model factory must create all model types",
            "Factory must handle missing dependencies gracefully"
          ]
        }
      },
      "execution_time_ms": 43040.247678756714,
      "critical": true
    },
    {
      "name": "Security Validation",
      "status": "PASSED",
      "score": 0.7,
      "details": {
        "security_module_src/security/__init__.py": "EXISTS",
        "security_module_src/security/input_sanitizer.py": "EXISTS",
        "security_module_src/utils/robust_error_handling.py": "EXISTS",
        "input_sanitizer": "FUNCTIONAL",
        "error_handling": "ERROR: name 'RecoveryManager' is not defined",
        "security_implementation": {
          "status": "error",
          "score": 0,
          "message": "Security validation failed: No module named 'numpy'",
          "error": "No module named 'numpy'",
          "requirements": [
            "Security scanner must be functional",
            "Input validation must work",
            "Authentication must be implemented"
          ]
        },
        "security_scanning": {
          "status": "error",
          "score": 0,
          "message": "Security scanning validation failed: No module named 'numpy'",
          "error": "No module named 'numpy'",
          "requirements": [
            "Security scanner must detect threats",
            "Scanner must classify threat levels"
          ]
        }
      },
      "execution_time_ms": 2752.3481845855713,
      "critical": true
    },
    {
      "name": "Performance Benchmarks",
      "status": "PASSED",
      "score": 0.8500000000000001,
      "details": {
        "performance_test": {
          "avg_latency_ms": 15.98177194595337,
          "throughput_hz": 62.57128454728093,
          "jit_enabled": true,
          "iterations": 100
        },
        "core_performance": {
          "status": "error",
          "score": 0,
          "message": "Performance benchmarking failed: No module named 'numpy'",
          "error": "No module named 'numpy'",
          "requirements": [
            "Core operations must meet performance thresholds",
            "Memory usage must be reasonable"
          ]
        },
        "optimization_features": {
          "status": "error",
          "score": 0,
          "message": "Optimization benchmarking failed: No module named 'torch'",
          "error": "No module named 'torch'",
          "requirements": [
            "Optimization features must provide speedup",
            "Caching must improve performance"
          ]
        }
      },
      "execution_time_ms": 3911.1621379852295,
      "critical": true
    },
    {
      "name": "Code Quality",
      "status": "PASSED",
      "score": 1.0,
      "details": {
        "module_structure": "4/4 modules exist",
        "documentation": "Classes have docstrings",
        "type_hints": "Type hints present"
      },
      "execution_time_ms": 0.5877017974853516,
      "critical": false
    },
    {
      "name": "Documentation",
      "status": "PASSED",
      "score": 0.99,
      "details": {
        "README.md": "EXISTS",
        "API_REFERENCE.md": "EXISTS",
        "DEPLOYMENT_GUIDE.md": "EXISTS"
      },
      "execution_time_ms": 0.11539459228515625,
      "critical": false
    },
    {
      "name": "Integration Tests",
      "status": "PASSED",
      "score": 1.0,
      "details": {
        "basic_model": "INTEGRATION_OK",
        "optimized_model": "INTEGRATION_OK",
        "security_integration": "INTEGRATION_OK"
      },
      "execution_time_ms": 965.9979343414307,
      "critical": true
    },
    {
      "name": "Resource Limits",
      "status": "PASSED",
      "score": 1.0,
      "details": {
        "memory_usage": {
          "initial_mb": 762.98828125,
          "final_mb": 777.171875,
          "increase_mb": 14.18359375
        },
        "cpu_usage_percent": 0.0
      },
      "execution_time_ms": 2630.33127784729,
      "critical": true
    },
    {
      "name": "Deployment Readiness",
      "status": "PASSED",
      "score": 1.0,
      "details": {
        "requirements.txt": "EXISTS",
        "setup.py": "EXISTS",
        "Dockerfile": "EXISTS",
        "deploy.sh": "EXISTS"
      },
      "execution_time_ms": 0.18548965454101562,
      "critical": false
    }
  ],
  "summary": {
    "pass_rate": 0.75,
    "total_gates": 8,
    "passed_gates": 6,
    "failed_gates": 2,
    "categories": {
      "functionality": {
        "score": 0.4,
        "status": "fail",
        "count": 1
      },
      "security": {
        "score": 0.7,
        "status": "passed",
        "count": 1
      },
      "performance": {
        "score": 0.85,
        "status": "passed",
        "count": 1
      },
      "quality": {
        "score": 1.0,
        "status": "passed",
        "count": 1
      },
      "documentation": {
        "score": 0.99,
        "status": "passed",
        "count": 1
      },
      "integration": {
        "score": 1.0,
        "status": "passed",
        "count": 1
      },
      "resources": {
        "score": 1.0,
        "status": "passed",
        "count": 1
      },
      "deployment": {
        "score": 1.0,
        "status": "passed",
        "count": 1
      }
    },
    "top_recommendations": [
      "Fix core model imports",
      "Fix neuron implementation",
      "Fix network implementation",
      "Fix LSM implementation",
      "Install missing dependencies (numpy, torch)"
    ],
    "critical_issues": [
      "core_functionality: Core functionality tests failed",
      "model_factory: Model factory testing failed: No module named 'numpy'",
      "security_implementation: Security validation failed: No module named 'numpy'",
      "security_scanning: Security scanning validation failed: No module named 'numpy'",
      "core_performance: Performance benchmarking failed: No module named 'numpy'",
      "optimization_features: Optimization benchmarking failed: No module named 'torch'"
    ]
  }
}
